{
  "version": "1.0.0",
  "projectName": "${PROJECT_NAME}",
  "description": "${PROJECT_DESCRIPTION}",
  "created": "${TIMESTAMP}",
  "framework": "SupaFloSho",
  
  "overview": {
    "vision": "${VISION}",
    "goals": [],
    "targetAudience": [],
    "keyFeatures": []
  },
  
  "userStories": [
    {
      "id": "US001",
      "title": "As a user, I want to...",
      "description": "Detailed user story description",
      "acceptanceCriteria": [
        "Given..., When..., Then..."
      ],
      "priority": "high",
      "estimatedEffort": "medium"
    }
  ],
  
  "technicalSpecifications": {
    "architecture": {
      "type": "monolithic|microservices|serverless",
      "components": []
    },
    "stack": {
      "frontend": {
        "framework": "React|Vue|Angular|Next.js",
        "styling": "CSS|Tailwind|MUI|Chakra",
        "stateManagement": "Context|Redux|Zustand"
      },
      "backend": {
        "runtime": "Node.js|Python|Go",
        "framework": "Express|FastAPI|Gin",
        "database": "PostgreSQL|MongoDB|MySQL"
      },
      "infrastructure": {
        "hosting": "AWS|GCP|Azure|Vercel",
        "cicd": "GitHub Actions|GitLab CI|Jenkins"
      }
    },
    "integrations": [],
    "performanceTargets": {
      "loadTime": "< 3s",
      "apiResponse": "< 200ms",
      "uptime": "99.9%"
    }
  },
  
  "testScenarios": [
    {
      "id": "TS001",
      "name": "Basic User Flow",
      "description": "Test the primary user journey",
      "steps": [
        {
          "action": "navigate",
          "url": "/",
          "description": "Open application"
        },
        {
          "action": "screenshot",
          "name": "home-page",
          "description": "Capture initial state"
        }
      ],
      "expectedOutcome": "User completes primary flow successfully",
      "testData": {}
    }
  ],
  
  "apiTests": [
    {
      "endpoint": "/api/example",
      "method": "GET",
      "description": "Test example endpoint",
      "expectedStatus": 200,
      "expectedResponse": {
        "success": true
      }
    }
  ],
  
  "successCriteria": {
    "functional": [
      "All user stories implemented and tested",
      "Core features working as specified"
    ],
    "nonFunctional": [
      "Performance targets met",
      "Accessibility WCAG 2.1 AA compliant",
      "Security best practices implemented"
    ],
    "business": [
      "User adoption metrics defined",
      "ROI measurable"
    ]
  },
  
  "implementation": {
    "phases": [
      {
        "name": "Foundation",
        "duration": "1 week",
        "deliverables": [
          "Project setup",
          "Basic architecture",
          "CI/CD pipeline"
        ]
      },
      {
        "name": "Core Features",
        "duration": "2-3 weeks",
        "deliverables": [
          "Primary user flows",
          "API endpoints",
          "Database schema"
        ]
      },
      {
        "name": "Polish & Testing",
        "duration": "1 week",
        "deliverables": [
          "UI polish",
          "Complete test coverage",
          "Documentation"
        ]
      }
    ]
  },
  
  "documentation": {
    "required": [
      "User Manual (auto-generated by FloSho)",
      "API Documentation (auto-generated by FloSho)",
      "Architecture Guide",
      "Deployment Guide"
    ]
  },
  
  "supaflosho": {
    "personas": {
      "primary": "architect",
      "supporting": ["frontend", "backend", "qa"]
    },
    "commands": {
      "initialization": "/xt:init",
      "implementation": "/sc:implement",
      "testing": "/fs:flow"
    },
    "mcp": {
      "context7": true,
      "sequential": true,
      "magic": true,
      "playwright": true
    }
  }
}